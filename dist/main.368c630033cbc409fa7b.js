/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
var __webpack_exports__ = {};
 // Selectors

var $listField = document.querySelector(".list__form input");
var $listSubmitBtn = document.querySelector(".list__form button");
var $listContainer = document.querySelector(".list--container");
var $listTemplate = document.querySelector(".list__template");
var $itemTemplate = document.querySelector(".item__template");
var listId = 0,
    itemId = 0;
var appData = {
  list: [],
  listIds: [],
  listItemIds: {}
}; // Function for setting focus to list field

var listFieldFunc = function listFieldFunc() {
  $listField.value = "";
  $listField.focus();
}; // Function for modifying String


var modifyString = function modifyString(str) {
  return str[0].toUpperCase() + str.slice(1).toLowerCase();
};
/*--------------- Event Handler for list input button ---------------*/


$listSubmitBtn.addEventListener("click", function (e) {
  // 1) Prevent Default Behavior
  e.preventDefault(); // 2) Get the list name

  var listName = $listField.value.trim(); // 3) Check for truthy value of listName

  if (listName && listName.length <= 20) {
    // i) Modify List Name
    listName = modifyString(listName); // iii) Store list index in appData.listIds array

    appData.listIds.push(listId); // ii) Store list in local Storage & also in appData.list array

    appData.list.push({
      listId: listId,
      listName: listName,
      items: []
    });
    localStorage.setItem("list", JSON.stringify(appData.list)); // iii) Empty input field

    listFieldFunc(); // iv) Display List in UI

    $listContainer.append($listTemplate.content.cloneNode(true));
    var $lastList = $listContainer.lastElementChild;
    $lastList.setAttribute("id", "list-".concat(listId));
    $lastList.querySelector("h2").innerText = listName; // v) Increase listId by 1

    listId++;
  }
});
/*----------- EventHandler for List Container When new item is added -----------*/

$listContainer.addEventListener("click", function (e) {
  var _e$target$previousEle;

  var $itemInputField = e.target.previousElementSibling;
  var itemName = (_e$target$previousEle = e.target.previousElementSibling) === null || _e$target$previousEle === void 0 ? void 0 : _e$target$previousEle.value.trim(); // Check if item add button is clicked & itemName is truthy

  if (e.target.matches(".btn__item--add") && itemName && itemName.length <= 30) {
    // i) Modify itemName
    itemName = modifyString(itemName); // ii)  Get list id

    var itemsListId = +e.target.closest(".list").id.split("-")[1]; // iii) Store itemId in appData.listItemIds

    if (appData.listItemIds[itemsListId]) appData.listItemIds[itemsListId].push(itemId);else {
      appData.listItemIds[itemsListId] = [];
      appData.listItemIds[itemsListId].push(itemId);
    } // iv) Store item in localStorage & appData.list array both

    var listIndex = appData.listIds.indexOf(itemsListId);
    appData.list[listIndex].items.push({
      itemId: itemId,
      itemName: itemName
    });
    localStorage.setItem("list", JSON.stringify(appData)); // v) Empty item Input Field & set the focus back

    $itemInputField.value = "";
    $itemInputField.focus(); // vi) Display item in UI

    var $itemsContainer = e.target.closest(".item__form").nextElementSibling;
    $itemsContainer.append($itemTemplate.content.cloneNode(true));
    var $lastItem = $itemsContainer.lastElementChild;
    $lastItem.setAttribute("id", "item-".concat(itemId));
    $lastItem.querySelector("p").innerText = itemName; // vii) Increase item id by 1

    itemId++;
  }
});
/*------------- Displaying list Data from localStorage on window loading -------------*/

window.addEventListener("load", function () {
  // Setting Focus to list Field
  listFieldFunc();
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,